{"version":3,"sources":["services/WeatherService.tsx","components/WeatherCards/WeatherCardTemplate.tsx","components/WeatherCards/WindCard.tsx","components/WeatherCards/PressureCard.tsx","components/WeatherCards/HumidityCard.tsx","components/WeatherCards/TemperatureCard.tsx","components/WeatherDashboard.tsx","components/WeatherForm.tsx","components/Minicard.tsx","components/Sidebar.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["API_KEY","process","baseUrl","getWeather","cityName","searchParams","finalUrl","concat","fetch","response","json","data","getWeatherIconLink","iconType","seedWeatherList","cityList","promiseList","map","city","Promise","all","weatherList","deleteLocation","weather","weathers","listOfLocations","name","uniqueListOfLocation","filter","val","i","arr","indexOf","updatedListOfLocation","localStorage","setItem","JSON","stringify","refreshWeathers","saveLocation","listOfCities","weatherPromises","getItem","savedLocations","parse","savedWeathers","WeatherCardTemplate","cardTitle","mainReadings","secondaryReadings","readingBaseStyle","display","flexDirection","justifyContent","fontSize","textAlign","verticalAlign","width","height","borderRight","heroStyle","alignItems","backgroundColor","border","borderRadius","boxSizing","color","overflow","marginTop","id","className","style","minWidth","maxWidth","padding","boxShadow","marginRight","marginBottom","reading","index","readingTitle","length","readingStyle","readingValue","readingUnit","WindCard","speedReading","wind","speed","toString","directionReading","deg","title","icon","faWind","mainWindReading","PressureCard","main","pressure","faTachometerAlt","HumidityCard","humidityReading","humidity","faTint","TemperatureCard","tempCurrent","temp","tempMin","temp_min","tempMax","temp_max","feels_like","faThermometerHalf","WeatherDashboard","saveWeather","saveButtonStyle","onClick","faSave","WeatherDashboardMain","iconLink","iconStyle","src","alt","descStyle","cityNameStyle","sys","country","WeatherCards","weatherCardsContainerStyle","element","marginLeft","flexWrap","fontFamily","cursor","margin","formStyle","baseStyle","textStyle","paddingLeft","buttonStyle","headerStyle","miniFormStyle","miniTextStyle","miniButtonStyle","MiniWeatherForm","updateWeather","toggleVisibility","useState","formValue","setFormValue","handleSubmit","e","preventDefault","noValidate","autoComplete","onSubmit","type","value","onChange","currentTarget","onFocus","WeatherForm","Minicard","setWeather","minicardStyle","deleteButtonStyle","stopPropagation","faTimes","textContentStyle","minHeight","position","top","right","background","Sidebar","overlayStyle","sidebarStyle","left","zIndex","overflowX","overflowY","toggleButtonStyle","searchButtonStyle","searchBarStyle","homeScreenStyle","App","setSavedWeathers","sidebarVisible","setSidebarVisibility","searchBarVisible","setSearchBarVisibility","fetchWeather","currentWeather","console","log","fullWeatherList","updatedWeathers","alert","activateDefaultView","useEffect","getSavedWeathers","then","faBars","faSearch","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1b678ade.chunk.js","sourcesContent":["import fetch from \"node-fetch\";\nimport \"dotenv/config\";\nimport { ICurrentWeather } from \"../interfaces/weatherInterface\";\n\nconst API_KEY = process.env.API_KEY || \"0df29c4a45b12f078f72df287f2a1ec6\";\nconst baseUrl = \"https://api.openweathermap.org/data/2.5/weather?\";\nconst imageLink = \"https://openweathermap.org/img/wn/\";\n\nexport async function getWeather(cityName: string): Promise<ICurrentWeather> {\n  let searchParams = `q=${cityName}&units=metric&appid=${API_KEY}`;\n  let finalUrl = baseUrl.concat(searchParams);\n  let response = await fetch(finalUrl);\n  let data = await response.json();\n  return data;\n}\n\nexport function getWeatherIconLink(iconType: string): string {\n  return `${imageLink}/${iconType}@4x.png`;\n}\n\nasync function seedWeatherList(cityList: string[]): Promise<ICurrentWeather[]> {\n  let promiseList = cityList.map((city) => getWeather(city));\n  let weatherList = await Promise.all(promiseList);\n  return weatherList;\n}\n\nexport async function deleteLocation(\n  weather: ICurrentWeather,\n  weathers: ICurrentWeather[]\n) {\n  const listOfLocations = weathers.map((weather) => weather.name);\n  const uniqueListOfLocation = listOfLocations.filter(\n    (val, i, arr) => arr.indexOf(val) === i\n  );\n\n  const cityName = weather.name;\n  const updatedListOfLocation = uniqueListOfLocation.filter(\n    (val) => val !== cityName\n  );\n\n  await localStorage.setItem(\n    \"savedLocations\",\n    JSON.stringify(updatedListOfLocation)\n  );\n  return refreshWeathers(updatedListOfLocation);\n}\n\nexport async function saveLocation(weathers: ICurrentWeather[]) {\n  const listOfLocations = weathers.map((weather) => weather.name);\n  const uniqueListOfLocation = listOfLocations.filter(\n    (val, i, arr) => arr.indexOf(val) === i\n  );\n  await localStorage.setItem(\n    \"savedLocations\",\n    JSON.stringify(uniqueListOfLocation)\n  );\n  return refreshWeathers(uniqueListOfLocation);\n}\n\nexport async function refreshWeathers(\n  listOfCities: string[]\n): Promise<ICurrentWeather[]> {\n  let weatherPromises = listOfCities.map((cityName) => getWeather(cityName));\n  let weathers = await Promise.all(weatherPromises);\n  return weathers;\n}\n\nexport async function getSavedWeathers(): Promise<ICurrentWeather[]> {\n  let savedLocations = await localStorage.getItem(\"savedLocations\");\n  let savedWeathers = savedLocations\n    ? await refreshWeathers(JSON.parse(savedLocations))\n    : await seedWeatherList([\"Amsterdam\"]);\n\n  return savedWeathers;\n}\n","import { FunctionComponent } from \"react\";\n\nexport type Reading = {\n  readingTitle: string;\n  readingValue: string;\n  readingUnit: string;\n  readingStyle?: any;\n};\n\ntype WeatherCardProps = {\n  cardTitle: any;\n  mainReadings?: Reading[];\n  secondaryReadings?: Reading[];\n};\n\nexport const WeatherCardTemplate: FunctionComponent<WeatherCardProps> = ({\n  cardTitle,\n  mainReadings,\n  secondaryReadings,\n}) => {\n  const miniCardStyle = {\n    backgroundColor: \"#b83b5e\",\n    border: \"solid 1px black\",\n    width:\"100%\",\n    minWidth:\"300px\",\n    maxWidth:\"400px\",\n    height: \"200px\",\n    borderRadius: \"30px\",\n    padding: \"0.6em\",\n    boxShadow: \"5px 5px black\",\n    marginRight: \"8px\",\n    marginBottom: \"8px\",\n    boxSizing: \"border-box\" as \"border-box\",\n    display: \"flex\",\n    flexDirection: \"column\" as \"column\",\n    alignItems: \"center\",\n    fontSize: \"xx-large\",\n  };\n\n  const readingBaseStyle = {\n    display: \"flex\",\n    flexDirection: \"column\" as \"column\",\n    justifyContent: \"center\",\n    fontSize: \"large\",\n    textAlign: \"center\" as \"center\",\n    verticalAlign: \"middle\",\n    width: \"100%\",\n    height: \"100%\",\n    borderRight: \"solid 1px black\",\n  };\n\n  const heroStyle = {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\" as \"center\",\n    backgroundColor: \"#f9ed69\",\n    border: \"solid 3px black\",\n    width: \"100%\",\n    height: \"100%\",\n    borderRadius: \"30px\",\n    boxSizing: \"border-box\" as \"border-box\",\n    color: \"black\",\n    overflow: \"hidden\",\n    marginTop: \"10px\",\n  };\n\n  return (\n    <section\n      id=\"weatherCard__pressure\"\n      className=\"minicard\"\n      style={miniCardStyle}\n    >\n      <header>\n        {cardTitle ? (\n          cardTitle\n        ) : (\n          <>\n            <i className=\"fas fa-tachometer-alt\"></i> Pressure\n          </>\n        )}\n      </header>\n\n      {mainReadings ? (\n        <div className=\"hero\" style={heroStyle}>\n          {mainReadings.map((reading, index) => (\n            <div\n              id={reading.readingTitle}\n              style={\n                index === mainReadings.length - 1\n                  ? {\n                      ...readingBaseStyle,\n                      ...reading.readingStyle,\n                      borderRight: \"none\",\n                    }\n                  : { ...readingBaseStyle, ...reading.readingStyle }\n              }\n            >\n              <div>{reading.readingTitle}</div>\n              <div>\n                {reading.readingValue} {reading.readingUnit}\n              </div>\n            </div>\n          ))}\n        </div>\n      ) : (\n        <></>\n      )}\n\n      {secondaryReadings ? (\n        <div className=\"hero\" style={heroStyle}>\n          {secondaryReadings.map((reading, index) => (\n            <div\n              id={reading.readingTitle}\n              style={\n                index === secondaryReadings.length - 1\n                  ? {\n                      ...readingBaseStyle,\n                      ...reading.readingStyle,\n                      borderRight: \"none\",\n                    }\n                  : { ...readingBaseStyle, ...reading.readingStyle }\n              }\n            >\n              <div>{reading.readingTitle}</div>\n              <div>\n                {reading.readingValue} {reading.readingUnit}\n              </div>\n            </div>\n          ))}\n        </div>\n      ) : (\n        <></>\n      )}\n    </section>\n  );\n};\n","import { FunctionComponent } from \"react\";\nimport { WeatherProps } from \"../../interfaces/WeatherProps\";\nimport { WeatherCardTemplate, Reading } from \"./WeatherCardTemplate\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faWind } from '@fortawesome/free-solid-svg-icons'\n\nexport const WindCard: FunctionComponent<WeatherProps> = ({ weather }) => {\n  const speedReading: Reading = {\n    readingTitle: \"Speed\",\n    readingValue: weather?.wind.speed.toString() || \"0\",\n    readingUnit: \"m/s\",\n  };\n\n  const directionReading: Reading = {\n    readingTitle: \"Direction\",\n    readingValue: weather?.wind.deg.toString() || \"0\",\n    readingUnit: \"°\",\n  };\n\n  const title = <><FontAwesomeIcon icon={faWind}/> Wind</>\n\n  const mainWindReading = [speedReading, directionReading];\n\n  return (\n    <WeatherCardTemplate cardTitle={title} mainReadings={mainWindReading} />\n  );\n};\n","import { FunctionComponent } from \"react\";\nimport { WeatherProps } from \"../../interfaces/WeatherProps\";\nimport { WeatherCardTemplate, Reading } from \"./WeatherCardTemplate\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTachometerAlt } from '@fortawesome/free-solid-svg-icons'\n\nexport const PressureCard: FunctionComponent<WeatherProps> = ({ weather }) => {\n  const pressureReading: Reading = {\n    readingTitle: \"Current\",\n    readingValue: weather?.main.pressure.toString() || \"0\",\n    readingUnit: \"hPa\",\n  };\n\n  const mainReadings = [pressureReading];\n  const title = <><FontAwesomeIcon icon={faTachometerAlt}/> Pressure</>\n\n\n  return (\n    <WeatherCardTemplate cardTitle={title} mainReadings={mainReadings} />\n  );\n};\n","import { FunctionComponent } from \"react\";\nimport { WeatherProps } from \"../../interfaces/WeatherProps\";\nimport { WeatherCardTemplate, Reading } from \"./WeatherCardTemplate\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTint } from '@fortawesome/free-solid-svg-icons'\n\n\nexport const HumidityCard: FunctionComponent<WeatherProps> = ({ weather }) => {\n  const humidityReading: Reading = {\n    readingTitle: \"Current\",\n    readingValue: weather?.main.humidity.toString() || \"0\",\n    readingUnit: \"%\",\n  };\n  const title = <><FontAwesomeIcon icon={faTint}/> Humidity</>\n  const mainReadings = [humidityReading];\n\n  return (\n    <WeatherCardTemplate cardTitle={title} mainReadings={mainReadings} />\n  );\n};\n\n","import { FunctionComponent } from \"react\";\nimport { WeatherProps } from \"../../interfaces/WeatherProps\";\nimport { WeatherCardTemplate, Reading } from \"./WeatherCardTemplate\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faThermometerHalf } from \"@fortawesome/free-solid-svg-icons\";\n\nexport const TemperatureCard: FunctionComponent<WeatherProps> = ({\n  weather,\n}) => {\n  const tempCurrent: Reading = {\n    readingTitle: \"Current\",\n    readingValue: weather?.main.temp.toString() || \"0\",\n    readingUnit: \"°C\",\n  };\n\n  const tempMin: Reading = {\n    readingTitle: \"Min\",\n    readingValue: weather?.main.temp_min.toString() || \"0\",\n    readingUnit: \"°C\",\n    readingStyle: { backgroundColor: \"lightsteelblue\" },\n  };\n\n  const tempMax: Reading = {\n    readingTitle: \"Max\",\n    readingValue: weather?.main.temp_max.toString() || \"0\",\n    readingUnit: \"°C\",\n    readingStyle: { backgroundColor: \"lightpink\" },\n  };\n\n  const tempFeelsLike: Reading = {\n    readingTitle: \"Feels Like\",\n    readingValue: weather?.main.feels_like.toString() || \"0\",\n    readingUnit: \"°C\",\n  };\n\n\n\n\n  const mainReadings = [tempCurrent];\n  const secondaryReadings = [tempMin,tempFeelsLike,tempMax];\n\n\n  const title = (\n    <>\n      <FontAwesomeIcon icon={faThermometerHalf} /> Temperature\n    </>\n  );\n\n  return <WeatherCardTemplate cardTitle={title} mainReadings={mainReadings} secondaryReadings={secondaryReadings}/>;\n};\n","import React, { FunctionComponent } from \"react\";\nimport { getWeatherIconLink } from \"../services/WeatherService\";\nimport { WeatherProps } from \"../interfaces/WeatherProps\";\nimport { WindCard } from \"./WeatherCards/WindCard\";\nimport { PressureCard } from \"./WeatherCards/PressureCard\";\nimport { HumidityCard } from \"./WeatherCards/HumidityCard\";\nimport { TemperatureCard } from \"./WeatherCards/TemperatureCard\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSave } from \"@fortawesome/free-solid-svg-icons\";\nimport { ICurrentWeather } from \"../interfaces/weatherInterface\";\n\ntype DashboardProps = {\n  weather: ICurrentWeather;\n  saveWeather: () => void;\n};\n\nexport const WeatherDashboard: FunctionComponent<DashboardProps> = ({\n  weather,\n  saveWeather,\n}) => {\n  return (\n    <div className=\"weatherCard__container\">\n      <button style={saveButtonStyle} onClick={saveWeather}>\n        <FontAwesomeIcon icon={faSave} /> Save\n      </button>\n      <WeatherDashboardMain weather={weather} />\n\n      <WeatherCards weather={weather} />\n    </div>\n  );\n};\n\nconst WeatherDashboardMain: FunctionComponent<WeatherProps> = ({ weather }) => {\n  const iconType = weather?.weather[0].icon;\n  const iconLink = iconType ? getWeatherIconLink(iconType) : \"\";\n  return (\n    <div>\n      <div id=\"weatherCard__icon\" style={iconStyle}>\n        <img src={iconLink} alt=\"\" />\n        <div id=\"weatherCard__description\" style={descStyle}>\n          <div>{weather?.weather[0].main}</div>\n          {/* <div id=\"weatherCard__subDescription\">\n            {weather?.weather[0].description}\n          </div> */}\n        </div>\n      </div>\n      <div id=\"weatherCard__city\" style={cityNameStyle}>\n        {weather?.name}, {weather?.sys.country}\n      </div>\n    </div>\n  );\n};\n\nexport const WeatherCards: FunctionComponent<WeatherProps> = ({ weather }) => {\n  const seedCards = [\"temperature\", \"wind\", \"pressure\", \"humidity\"];\n\n  return (\n    <div\n      className=\"weatherCard__info__container\"\n      style={weatherCardsContainerStyle}\n    >\n      {seedCards.map((element) => {\n        switch (element) {\n          case \"temperature\":\n            return <TemperatureCard weather={weather} />;\n          case \"wind\":\n            return <WindCard weather={weather} />;\n          case \"pressure\":\n            return <PressureCard weather={weather} />;\n          case \"humidity\":\n            return <HumidityCard weather={weather} />;\n\n          default:\n            return <WindCard weather={weather} />;\n        }\n      })}\n    </div>\n  );\n};\n\n//Styles\n// Weather Dashboard styles\nconst iconStyle = {\n  display: \"flex\",\n  height:\"180px\"\n};\n\nconst descStyle = {\n  fontSize: \"xx-large\",\n  display: \"flex\",\n  flexDirection: \"column\" as \"column\",\n  justifyContent: \"center\",\n  marginLeft: \"-10px\",\n};\n\nconst cityNameStyle = {\n  fontSize: \"xxx-large\",\n  marginBottom: \"1em\",\n  marginTop: \"-1em\",\n  textAlign: \"center\" as \"center\",\n};\n\n// WeatherCards Container\nconst weatherCardsContainerStyle = {\n  display: \"flex\",\n  flexDirection: \"row\" as \"row\",\n  flexWrap: \"wrap\" as \"wrap\",\n  justifyContent: \"center\",\n};\n\nconst saveButtonStyle = {\n  backgroundColor: \"#6A2C70\",\n  color: \"white\",\n  borderRadius: \"10px\",\n  height: \"40px\",\n  width: \"100%\",\n  maxWidth:\"300px\",\n  border: \"none\",\n  fontFamily: \"Itim\",\n  cursor: \"pointer\",\n  margin: \"auto\",\n  fontSize: \"large\"\n};\n","import { ChangeEventHandler, FC, SyntheticEvent, useState } from \"react\";\n\n// STYLES\nconst formStyle = {\n  display: \"flex\",\n  flexDirection: \"column\" as \"column\",\n  justifyContent: \"space-between\",\n  height: \"100px\",\n};\n\nconst baseStyle = {\n  display: \"flex\",\n  flexDirection: \"column\" as \"column\",\n  justifyContent: \"space-between\",\n};\n\nconst textStyle = {\n  backgroundColor: \"white\",\n  color: \"black\",\n  borderRadius: \"10px\",\n  height: \"40px\",\n  paddingLeft: \"5px\",\n  fontSize: \"x-large\",\n  fontFamily: \"Itim\",\n};\n\nconst buttonStyle = {\n  backgroundColor: \"#6A2C70\",\n  color: \"white\",\n  borderRadius: \"10px\",\n  height: \"40px\",\n  border: \"none\",\n  fontSize: \"x-large\",\n  fontFamily: \"Itim\",\n};\n\nconst headerStyle = {\n  fontSize: \"xx-large\",\n  marginBottom: \"20px\",\n};\n\n///Styles for Mini WeatherForm\nconst miniFormStyle = {\n  display: \"flex\",\n  justifyContent: \"space-between\",\n  height: \"100px\",\n  boxSizing: \"border-box\" as \"border-box\",\n};\n\nconst miniTextStyle = {\n  backgroundColor: \"white\",\n  color: \"black\",\n  borderRadius: \"10px\",\n  height: \"40px\",\n  paddingLeft: \"5px\",\n  fontFamily: \"Itim\",\n  marginRight: \"5px\",\n  marginLeft: \"5px\",\n  boxSizing: \"border-box\" as \"border-box\",\n};\n\nconst miniButtonStyle = {\n  backgroundColor: \"#6A2C70\",\n  color: \"white\",\n  borderRadius: \"10px\",\n  height: \"40px\",\n  border: \"none\",\n  fontFamily: \"Itim\",\n};\n\n// MINIWEATHERFORM\ntype WeatherFormProps = {\n  updateWeather: (cityName: string) => void;\n  toggleVisibility?: () => void;\n};\n\nexport const MiniWeatherForm: FC<WeatherFormProps> = ({\n  updateWeather,\n  toggleVisibility,\n}) => {\n  const [formValue, setFormValue] = useState<string | undefined>(\n    \"Search for more cities...\"\n  );\n\n  function handleSubmit(e: SyntheticEvent) {\n    e.preventDefault();\n    if (formValue) {\n      updateWeather(formValue);\n    }\n    if (toggleVisibility) {\n      toggleVisibility();\n    }\n  }\n  const handleChange: ChangeEventHandler<HTMLInputElement> = (e) => {\n    setFormValue(e.currentTarget.value);\n  };\n\n  function clearValue() {\n    setFormValue(\"\");\n  }\n\n  return (\n    <div className=\"WeatherForm\" style={baseStyle}>\n      <form\n        noValidate\n        autoComplete=\"off\"\n        onSubmit={handleSubmit}\n        style={miniFormStyle}\n      >\n        <input\n          type=\"text\"\n          value={formValue}\n          onChange={handleChange}\n          onFocus={clearValue}\n          style={miniTextStyle}\n        />\n\n        <button onClick={handleSubmit} style={miniButtonStyle}>\n          Go\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport const WeatherForm: FC<WeatherFormProps> = ({ updateWeather }) => {\n  const [formValue, setFormValue] =\n    useState<string | undefined>(\"Where do you live?\");\n\n  const handleChange: ChangeEventHandler<HTMLInputElement> = (e) => {\n    setFormValue(e.currentTarget.value);\n  };\n\n  function handleSubmit(e: SyntheticEvent) {\n    e.preventDefault();\n    if (formValue) {\n      updateWeather(formValue);\n    }\n  }\n\n  function clearValue() {\n    setFormValue(\"\");\n  }\n\n  return (\n    <div className=\"WeatherForm\" style={baseStyle}>\n      <header style={headerStyle}>Welcome to Sunrise!</header>\n      <form\n        noValidate\n        autoComplete=\"off\"\n        onSubmit={handleSubmit}\n        style={formStyle}\n      >\n        <input\n          type=\"text\"\n          value={formValue}\n          onChange={handleChange}\n          onFocus={clearValue}\n          style={textStyle}\n        />\n        <button onClick={handleSubmit} style={buttonStyle}>\n          Go\n        </button>\n      </form>\n    </div>\n  );\n};\n","import { getWeatherIconLink } from \"../services/WeatherService\";\nimport { ICurrentWeather } from \"../interfaces/weatherInterface\";\nimport { FunctionComponent, SyntheticEvent } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\ntype MinicardProps = {\n  weather: ICurrentWeather;\n  setWeather: (weather: ICurrentWeather) => void;\n  toggleVisibility: () => void;\n  deleteLocation: (weather: ICurrentWeather) => void;\n};\n\nexport const Minicard: FunctionComponent<MinicardProps> = ({\n  weather,\n  setWeather,\n  toggleVisibility,\n  deleteLocation\n}) => {\n\n  function handleDelete(e:SyntheticEvent){\n    deleteLocation(weather)\n    e.stopPropagation()\n\n  }\n  const iconType = weather?.weather[0].icon;\n  const iconLink = iconType ? getWeatherIconLink(iconType) : \"\";\n\n  return (\n    <article\n      style={minicardStyle}\n      onClick={() => {\n        setWeather(weather);\n        toggleVisibility();\n      }}\n    >\n      <div style={iconStyle}>\n        <img src={iconLink} alt=\"\" />\n      </div>\n      <button style={deleteButtonStyle} onClick={handleDelete}>\n        <FontAwesomeIcon icon={faTimes} />\n      </button>\n      <div style={textContentStyle}>\n        <div>\n          {weather?.name}, {weather?.sys.country}\n        </div>\n        <div>{weather?.main.temp.toString()}°C</div>\n        <div>{weather?.weather[0].main}</div>\n      </div>\n    </article>\n  );\n};\n\n//STYLES\nconst minicardStyle = {\n  backgroundColor: \"#b83b5e\",\n  border: \"solid 1px black\",\n  width: \"100%\",\n  minHeight: \"130px\",\n  height: \"200px\",\n  borderRadius: \"30px\",\n  padding: \"1em\",\n  boxShadow: \"5px 5px black\",\n  marginRight: \"8px\",\n  marginBottom: \"8px\",\n  boxSizing: \"border-box\" as \"border-box\",\n  display: \"flex\",\n  alignItems: \"center\",\n  cursor: \"pointer\",\n  position:\"relative\" as \"relative\"\n};\n\nconst iconStyle = {\n  maxWidth: \"35%\",\n  display: \"flex\",\n  flexDirection: \"column\" as \"column\",\n};\n\nconst textContentStyle = {\n  display: \"flex\",\n  flexDirection: \"column\" as \"column\",\n  fontSize: \"x-large\",\n};\n\nconst deleteButtonStyle={\n  position:\"absolute\" as \"absolute\",\n  top:\"10px\",\n  right:\"10px\",\n  cursor:\"pointer\",\n  background:\"none\",\n  border:\"none\",\n  color:\"white\",\n  fontSize:\"x-large\",\n\n\n}\n","import { FunctionComponent } from \"react\";\nimport { ICurrentWeather } from \"../interfaces/weatherInterface\";\nimport { Minicard } from \"./Minicard\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\ntype SidebarProps = {\n  weatherList: ICurrentWeather[] | undefined;\n  toggleVisibility: () => void;\n  setWeather: (weather: ICurrentWeather) => void;\n  deleteLocation: (weather: ICurrentWeather)=>void;\n};\n\nexport const Sidebar: FunctionComponent<SidebarProps> = ({\n  weatherList,\n  toggleVisibility,\n  setWeather,\n  deleteLocation\n}) => {\n  return (\n    <>\n      <div style={overlayStyle} onClick={toggleVisibility}></div>\n      <div style={sidebarStyle}>\n        <div style={headerStyle}>\n          <h2>Saved Cities</h2>\n          <h2>\n            <FontAwesomeIcon\n              icon={faTimes}\n              onClick={toggleVisibility}\n              style={{ cursor: \"pointer\" }}\n            />\n          </h2>\n        </div>\n        {weatherList ? (\n          weatherList.map((weather) => {\n            return (\n              <Minicard\n                weather={weather}\n                key={weather.name}\n                setWeather={setWeather}\n                toggleVisibility={toggleVisibility}\n                deleteLocation={deleteLocation}\n              />\n            );\n          })\n        ) : (\n          <h2>No saved cities!</h2>\n        )}\n      </div>\n    </>\n  );\n};\n\nconst overlayStyle = {\n  top: \"0\",\n  left: \"0\",\n  minHeight: \"100vh\",\n  width: \"100vw\",\n  zIndex: 2,\n  position: \"fixed\" as \"fixed\",\n  backgroundColor: \"rgba(0, 0, 0, 0.5)\",\n};\nconst sidebarStyle = {\n  minHeight: \"100vh\",\n  height: \"100%\",\n  width: \"100vw\",\n  minWidth: \"300px\",\n  maxWidth: \"400px\",\n  // overflow: \"auto\",\n  overflowX: \"hidden\" as \"hidden\",\n  overflowY: \"scroll\" as \"scroll\",\n  position: \"fixed\" as \"fixed\",\n  zIndex: 3,\n  backgroundColor: \"#F08A5D\",\n  left: \"0\",\n  top: \"0\",\n  display: \"flex\",\n  flexDirection: \"column\" as \"column\",\n  padding: \"20px\",\n  boxSizing: \"border-box\" as \"border-box\",\n};\n\nconst headerStyle = {\n  display: \"flex\",\n  justifyContent: \"space-between\",\n};\n\n// STYLES\n","import React, { useEffect, useState } from \"react\";\nimport { WeatherDashboard } from \"./components/WeatherDashboard\";\nimport { ICurrentWeather } from \"./interfaces/weatherInterface\";\nimport {\n  getWeather,\n  getSavedWeathers,\n  saveLocation,\n  deleteLocation,\n} from \"./services/WeatherService\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faBars, faSearch, faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\nimport \"./App.css\";\nimport { WeatherForm, MiniWeatherForm } from \"./components/WeatherForm\";\nimport { Sidebar } from \"./components/Sidebar\";\n\n// STYLES\n\nconst toggleButtonStyle = {\n  position: \"absolute\" as \"absolute\",\n  left: \"10px\",\n  top: \"10px\",\n  backgroundColor: \"#6A2C70\",\n  color: \"white\",\n  borderRadius: \"10px\",\n  height: \"40px\",\n  width: \"auto\",\n  border: \"none\",\n  fontSize: \"x-large\",\n  fontFamily: \"Itim\",\n  cursor: \"pointer\",\n};\n\nconst searchButtonStyle = {\n  backgroundColor: \"#6A2C70\",\n  color: \"white\",\n  borderRadius: \"10px\",\n  height: \"40px\",\n  width: \"auto\",\n  border: \"none\",\n  fontSize: \"x-large\",\n  fontFamily: \"Itim\",\n  cursor: \"pointer\",\n};\n\nconst searchBarStyle = {\n  position: \"absolute\" as \"absolute\",\n  right: \"10px\",\n  top: \"10px\",\n  display: \"flex\",\n  justifyContent: \"space-around\",\n};\n\nconst homeScreenStyle = {\n  marginTop: \"80px\",\n  display: \"flex\",\n  flexDirection: \"column\" as \"column\",\n  justifyContent: \"center\",\n};\n\nfunction App() {\n  const [weather, setWeather] = useState<ICurrentWeather | undefined>();\n  const [savedWeathers, setSavedWeathers] =\n    useState<ICurrentWeather[] | undefined>();\n  const [sidebarVisible, setSidebarVisibility] = useState<boolean>(false);\n  const [searchBarVisible, setSearchBarVisibility] = useState<boolean>(false);\n\n  async function fetchWeather(cityName: string) {\n    const currentWeather = await getWeather(cityName);\n    if (currentWeather) {\n      setWeather(currentWeather);\n      console.log(currentWeather);\n    }\n  }\n\n  function setActiveWeather(weather: ICurrentWeather) {\n    toggleVisibility();\n    setWeather(weather);\n  }\n\n  async function saveWeatherToCollection() {\n    if (weather) {\n      const fullWeatherList = savedWeathers\n        ? savedWeathers.concat(weather)\n        : [weather];\n\n      const updatedWeathers = await saveLocation(fullWeatherList);\n\n      setSavedWeathers(updatedWeathers);\n\n      alert(\"Weather saved!\");\n    }\n  }\n\n  async function deleteWeatherFromCollection(weather: ICurrentWeather) {\n    if (savedWeathers) {\n      const updatedWeathers = await deleteLocation(weather, savedWeathers);\n      setSavedWeathers(updatedWeathers)\n    }\n  }\n\n  function activateSidebar() {\n    setSidebarVisibility(true);\n    setSearchBarVisibility(false);\n  }\n\n  function activateSearchBar() {\n    setSearchBarVisibility(!searchBarVisible);\n  }\n\n  function activateDefaultView() {\n    setSidebarVisibility(false);\n    setSearchBarVisibility(false);\n  }\n\n  function toggleVisibility() {}\n\n  useEffect(() => {\n    console.log(\"called\");\n    getSavedWeathers().then((weathers) => {\n      setSavedWeathers(weathers);\n    });\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <button style={toggleButtonStyle} onClick={activateSidebar}>\n          <FontAwesomeIcon icon={faBars} />{\" \"}\n          {searchBarVisible ? <></> : <span>Saved Cities</span>}\n        </button>\n\n        <div className=\"searchBar\" style={searchBarStyle}>\n          <button style={searchButtonStyle} onClick={activateSearchBar}>\n            {searchBarVisible ? (\n              <FontAwesomeIcon icon={faTimes} />\n            ) : (\n              <FontAwesomeIcon icon={faSearch} />\n            )}\n          </button>\n          {searchBarVisible && (\n            <MiniWeatherForm\n              updateWeather={fetchWeather}\n              toggleVisibility={activateDefaultView}\n            />\n          )}\n        </div>\n\n        {sidebarVisible && (\n          <Sidebar\n            weatherList={savedWeathers}\n            toggleVisibility={activateDefaultView}\n            setWeather={setActiveWeather}\n            deleteLocation={deleteWeatherFromCollection}\n          />\n        )}\n\n        {weather ? (\n          <WeatherDashboard\n            weather={weather}\n            saveWeather={saveWeatherToCollection}\n          />\n        ) : (\n          <div style={homeScreenStyle}>\n            <WeatherForm updateWeather={fetchWeather} />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}